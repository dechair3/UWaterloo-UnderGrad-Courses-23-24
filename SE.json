{
    "Name": "softwareengineering",
    "Notes": "Enrolment in Software Engineering courses is normally restricted\r\nto students enrolled in software engineering.",
    "Courses": [
        {
            "courseCode": "SE101",
            "Name": "Introduction to Methods of Software Engineering",
            "Desc": "An introduction to some of the basic methods and principles used by software engineers, including fundamentals of technical communication, measurement, analysis, and design. Some aspects of the software engineering profession, including standards, safety and intellectual property. Professional development including r\u00e9sum\u00e9 skills, interview skills, and preparation for co-op terms. Safety-orientation training, including WHMIS assessment, is included in this course. [Offered: F]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE102",
            "Name": "Seminar",
            "Desc": "General seminar. [Offered: W]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE201",
            "Name": "Seminar",
            "Desc": "General seminar. [Offered: F]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE202",
            "Name": "Seminar",
            "Desc": "General seminar. [Offered: S]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE212",
            "Name": "Logic and Computation",
            "Desc": "Formal logic. Proof systems and styles. Rudimentary model theory. Formal models of computation. Logic-based specification. Correctness proofs. Applications in software engineering. [Offered: F]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: MATH 135; Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE301",
            "Name": "Seminar",
            "Desc": "General seminar. [Offered: W]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE302",
            "Name": "Seminar",
            "Desc": "General seminar. [Offered: F]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE350",
            "Name": "Operating Systems",
            "Desc": "An introduction to the fundamentals of operating system function, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.  [Offered: W]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: CS 240/240E, (CS 246/246E or 247), ECE 222; Software Engineering. ",
            "Coreqs": "None",
            "Antireqs": " Antireq: CS 350, ECE 254, 354, MTE 241",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE380",
            "Name": "Introduction to Feedback Control",
            "Desc": "Introduction to control systems. Advantages of closed-loop feedback systems. The role of the system mathematical model. Block diagrams and signal flow graphs. The basic control system design problem, stability in control systems. Frequency response analysis techniques. Root-locus analysis. Elementary lead-lag compensation. [Offered: F]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: MATH 213; Software Engineering.",
            "Coreqs": "None",
            "Antireqs": " Antireq: ECE 380, ME 360, MTE 360, SYDE 352",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE390",
            "Name": "Design Project Planning",
            "Desc": "Students undertake a substantial customer-driven group project as part of the SE 390/490/491 design-project sequence covering all major phases of the software-engineering lifecycle. Lectures describe expectations and project-planning fundamentals. Students form groups, decide on a project concept, complete a project-approval process, develop high-level requirements for the project, perform a risk assessment, develop a test plan, and complete a first-iteration prototype. Social, legal, and economic factors are considered. [Offered: F]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: CS 240/240E, (CS 246/246E or 247);PD 10; Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE401",
            "Name": "Seminar",
            "Desc": "General seminar. [Offered: S]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE402",
            "Name": "Seminar",
            "Desc": "General seminar. [Offered: W]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE463",
            "Name": "Software Requirements Specification and Analysis",
            "Desc": "Introduces students to the requirements definition phase of software development;  models, notations, and processes for software requirements, identification, representation, analysis, and validation.  Cost estimation from early documents and specifications. ",
            "Notes": "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: S]",
            "Consent": "None",
            "Prereqs": "Prereq: CS 246/246E or 247; Software Engineering. ",
            "Coreqs": "None",
            "Antireqs": " Antireq: CS 445, ECE 451",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE464",
            "Name": "Software Design and Architectures",
            "Desc": "Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation.  Implementation of designs. Evolution of designs and implementations.  Management of design activities. ",
            "Notes": "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F]",
            "Consent": "None",
            "Prereqs": "Prereq: CS 246/246E or 247; Software Engineering.",
            "Coreqs": "None",
            "Antireqs": " Antireq: CS 446, ECE 452",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE465",
            "Name": "Software Testing and Quality Assurance",
            "Desc": "Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues. ",
            "Notes": "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]",
            "Consent": "None",
            "Prereqs": "Prereq: CS 246/246E or 247; Software Engineering.",
            "Coreqs": "None",
            "Antireqs": " Antireq: CS 447, ECE 453",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE490",
            "Name": "Design Project 1",
            "Desc": "Continuing from SE 390, students undertake a substantial customer-driven group project. Project groups establish and maintain project control processes, delivering a series of iterations on their initial SE 390 prototype. Adaptive methodologies are encouraged and supported. [Offered: S]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: SE 390; Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE491",
            "Name": "Design Project 2",
            "Desc": "Final implementation, testing, and communication of the design project started in SE 390. Technical presentations by groups. Analysis of social, legal, and economic impacts. Final release of the project. Project retrospective. [Offered: W]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: SE 490; Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE498",
            "Name": "Advanced Topics in Software Engineering",
            "Desc": "See the course offerings list for topics available. [Offered: As available]",
            "Notes": "None",
            "Consent": "None",
            "Prereqs": "Prereq: Level at least 3B Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        },
        {
            "courseCode": "SE499",
            "Name": "Project",
            "Desc": "A software engineering project requiring the student to demonstrate initiative and assume responsibility.  The student normally proposes their own project, which must involve substantial engineering science or engineering design.  The student must find a faculty supervisor.  A project report is required at the end of the term.  Plan consent required. [Offered: F, W, S]",
            "Notes": "None",
            "Consent": "Department Consent Required",
            "Prereqs": "Prereq: Level at least 4A Software Engineering",
            "Coreqs": "None",
            "Antireqs": "None",
            "crosslisted": "None",
            "online": false
        }
    ]
}